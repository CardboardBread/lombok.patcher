<project name="install-ivy" xmlns:ivy="antlib:org.apache.ivy.ant">
	<description>This ant script can install or update Apache Ivy, which is used for lombok.ast's dependency management.
See: http://ant.apache.org/ivy. NB: You don't have to download anything - just run 'init-ivy', which lombok.ast's build process does automatically.</description>
	<property name="ivy.install.version" value="2.1.0" />
	<property name="ivy.home" location="." />
	
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
	<property name="ivy.download.url"
		value="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" />
	
	<condition property="ivy.download">
		<and>
			<not><isset property="offline" /></not>
			<not><available file="${ivy.jar.file}" /></not>
		</and>
	</condition>
	
	<target name="download-ivy" if="ivy.download">
		<mkdir dir="${ivy.jar.dir}" />
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get
			src="${ivy.download.url}" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>
	
	<target name="init-ivy" depends="download-ivy">
		<available file="lib/ivy.jar" property="ivy.available" />
		<fail unless="ivy.available" message="Cannot download ivy.jar from ${ivy.download.url} - can't continue the build as you can't download the dependencies without ivy." />
	</target>
	
	<target name="showDependencyReport" depends="init-ivy" description="Shows a HTML page with dependency info. Make sure ivy is configured before calling this, and set property build.report for where I can store temporary files.">
		<property name="build.report" value="build/report" />
		<mkdir dir="${build.report}" />
			<ivy:report todir="${build.report}" graph="false" outputpattern="dependencies-info.html" />
			<echo file="${build.report}/ShowDependencyReport.java">public class ShowDependencyReport {
		public static void main(String[] args) {
			try {
				java.awt.Desktop.getDesktop().browse(new java.io.File(args[0]).toURI());
			} catch (Throwable t) {
			t.printStackTrace();
				System.err.println("To see the dependency report, browse to: " + new java.io.File(args[0]).toURI());
			}
		}
	}</echo>
			<javac source="1.6" target="1.6"
				destdir="${build.report}" srcdir="${build.report}" includes="ShowDependencyReport.java" />
			<java fork="true" classname="ShowDependencyReport" classpath="${build.report}">
				<jvmarg value="-Dapple.awt.UIElement=true" />
				<arg file="build/report/dependencies-info.html" />
			</java>
		</target>
</project>
